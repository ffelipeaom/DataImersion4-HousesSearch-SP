# -*- coding: utf-8 -*-
"""Imersao_dados_4_aula01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/ffelipeaom/eb2f1ee2210aacaf1b815fd8ac6bf62b/imersao_dados_4_aula01.ipynb
"""

import pandas as pd
url = "https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv"
df = pd.read_csv(url)

#exploring the df
df.head()

#exploring the df
df.sample(10)

#exploring the df
df.info()

#pick a single column
df["Bairro"][6522]

#calculate mean
df["Metragem"].mean()
#or df.Metragem.mean()

#total of houses in a specific district
sum((df["Bairro"] == "Vila Mariana"))

#select lines from that district
has_house_vila_mariana = df["Bairro"] == "Vila Mariana"
vila_mariana_houses = df[has_house_vila_mariana]
vila_mariana_houses

#calculate square meters mean from houses on that district
vila_mariana_houses["Metragem"].mean()

#square meters mean from all districts
df["Metragem"].mean()

"""From that, we can see the mean footage of the Vila Mariana district is lower than the mean footage of the whole dataframe. As we have seen before, that there are 184 entries from Vila Mariana, and that number might not be enough to represent the reality significantly, specially when dealing with districts with even less entries.

Below, we can see the district with the most amount of entries.
"""

#exploring the data
df["Bairro"].value_counts()

#counting and plotting the number of entries in the top 10 district
n_houses_district = df["Bairro"].value_counts()
n_houses_district.head(10).plot.bar()

"""Desafios:

1 - Realizar a média da metragem para cada um dos bairros (Paulo)

2 - 2 formas de selecionar os dados por bairro (consultar os métodos na documentação do pandas) (Thiago)

3 - Explorar alguns gráficos na documentação e aplicar nas demais colunas do DF, tentar colocar alguma conclusão (Thiago)

4 - Pegar outros estatísticas dos dados, média, mediana, mim, max (Vivi)

5 - Descobrir quais são os bairros que não tem nome de Rua. (Vivi)

**Challenges**
"""

#1 - Find the mean footage from each district
df_mean_footage = df.groupby("Bairro").mean()["Metragem"].sort_values()
df_mean_footage

#2 - Find 2 ways of selecting district data
df.loc[:,["Bairro", "Metragem", "Valor"]]

#2 - Find 2 ways of selecting district data
#another way
df["Bairro"].describe()

#3 - Find other ways to plot, and apply them to other columns
import matplotlib.pyplot as plt
#top20 districts with most number of houses
plt.figure(figsize=(16,9))
plt.title("Os vinte bairros com mais imóveis")
df["Bairro"].value_counts().head(20).plot.barh()
plt.show()

#3 - Find other ways to plot, and apply them to other columns
#relation between the quantity of bedrooms plus bathrooms with the total footage
district = "Higienópolis"
has_house_district = df["Bairro"] == district
district_houses = df[has_house_district]
district_house_data = district_houses.loc[:,["Metragem", "Banheiros", "Quartos"]]
district_house_data.head(20).sort_values(by = "Metragem").plot.bar(x="Metragem", stacked = True, rot = 360, title = "Relação de Quartos+Banheiros com Metragem no bairro "+district)

#3 - Find other ways to plot, and apply them to other columns
#some other plotting types
from pandas.plotting import bootstrap_plot
bootstrap_plot(vila_mariana_houses["Metragem"], samples = 100)

#4 Find other statistics
df[["Metragem", "Quartos", "Banheiros", "Vagas"]].describe()

#4 Find other statistics
# or
df[['Metragem','Quartos','Banheiros','Vagas']].median()

#5 Find out which districts has the most missing values for address (Rua)
df.count() #shows there is some missing values for Rua and Bairro

#makes a df to work with, then counts the amount of missing values on each district
df_address_district = df.loc[:, ["Rua","Bairro"]]
address_missing = df_address_district[df_address_district["Rua"].isna()]['Bairro'].value_counts()
address_missing.head(20)

